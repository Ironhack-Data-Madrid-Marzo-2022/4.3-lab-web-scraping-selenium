{"version":3,"sources":["node_modules/@github/time-elements/dist/index.js"],"names":[],"mappings":"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","file":"5329-xxxxxxxxxxxx.js","sourcesContent":["const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\nfunction pad(num) {\n    return `0${num}`.slice(-2);\n}\nfunction strftime(time, formatString) {\n    const day = time.getDay();\n    const date = time.getDate();\n    const month = time.getMonth();\n    const year = time.getFullYear();\n    const hour = time.getHours();\n    const minute = time.getMinutes();\n    const second = time.getSeconds();\n    return formatString.replace(/%([%aAbBcdeHIlmMpPSwyYZz])/g, function (_arg) {\n        let match;\n        const modifier = _arg[1];\n        switch (modifier) {\n            case '%':\n                return '%';\n            case 'a':\n                return weekdays[day].slice(0, 3);\n            case 'A':\n                return weekdays[day];\n            case 'b':\n                return months[month].slice(0, 3);\n            case 'B':\n                return months[month];\n            case 'c':\n                return time.toString();\n            case 'd':\n                return pad(date);\n            case 'e':\n                return String(date);\n            case 'H':\n                return pad(hour);\n            case 'I':\n                return pad(strftime(time, '%l'));\n            case 'l':\n                if (hour === 0 || hour === 12) {\n                    return String(12);\n                }\n                else {\n                    return String((hour + 12) % 12);\n                }\n            case 'm':\n                return pad(month + 1);\n            case 'M':\n                return pad(minute);\n            case 'p':\n                if (hour > 11) {\n                    return 'PM';\n                }\n                else {\n                    return 'AM';\n                }\n            case 'P':\n                if (hour > 11) {\n                    return 'pm';\n                }\n                else {\n                    return 'am';\n                }\n            case 'S':\n                return pad(second);\n            case 'w':\n                return String(day);\n            case 'y':\n                return pad(year % 100);\n            case 'Y':\n                return String(year);\n            case 'Z':\n                match = time.toString().match(/\\((\\w+)\\)$/);\n                return match ? match[1] : '';\n            case 'z':\n                match = time.toString().match(/\\w([+-]\\d\\d\\d\\d) /);\n                return match ? match[1] : '';\n        }\n        return '';\n    });\n}\nfunction makeFormatter(options) {\n    let format;\n    return function () {\n        if (format)\n            return format;\n        if ('Intl' in window) {\n            try {\n                format = new Intl.DateTimeFormat(undefined, options);\n                return format;\n            }\n            catch (e) {\n                if (!(e instanceof RangeError)) {\n                    throw e;\n                }\n            }\n        }\n    };\n}\nlet dayFirst = null;\nconst dayFirstFormatter = makeFormatter({ day: 'numeric', month: 'short' });\nfunction isDayFirst() {\n    if (dayFirst !== null) {\n        return dayFirst;\n    }\n    const formatter = dayFirstFormatter();\n    if (formatter) {\n        const output = formatter.format(new Date(0));\n        dayFirst = !!output.match(/^\\d/);\n        return dayFirst;\n    }\n    else {\n        return false;\n    }\n}\nlet yearSeparator = null;\nconst yearFormatter = makeFormatter({ day: 'numeric', month: 'short', year: 'numeric' });\nfunction isYearSeparator() {\n    if (yearSeparator !== null) {\n        return yearSeparator;\n    }\n    const formatter = yearFormatter();\n    if (formatter) {\n        const output = formatter.format(new Date(0));\n        yearSeparator = !!output.match(/\\d,/);\n        return yearSeparator;\n    }\n    else {\n        return true;\n    }\n}\nfunction isThisYear(date) {\n    const now = new Date();\n    return now.getUTCFullYear() === date.getUTCFullYear();\n}\nfunction makeRelativeFormat(locale, options) {\n    if ('Intl' in window && 'RelativeTimeFormat' in window.Intl) {\n        try {\n            return new Intl.RelativeTimeFormat(locale, options);\n        }\n        catch (e) {\n            if (!(e instanceof RangeError)) {\n                throw e;\n            }\n        }\n    }\n}\nfunction localeFromElement(el) {\n    const container = el.closest('[lang]');\n    if (container instanceof HTMLElement && container.lang) {\n        return container.lang;\n    }\n    return 'default';\n}\n\nconst datetimes = new WeakMap();\nclass ExtendedTimeElement extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            'datetime',\n            'day',\n            'format',\n            'lang',\n            'hour',\n            'minute',\n            'month',\n            'second',\n            'title',\n            'weekday',\n            'year',\n            'time-zone-name'\n        ];\n    }\n    connectedCallback() {\n        const title = this.getFormattedTitle();\n        if (title && !this.hasAttribute('title')) {\n            this.setAttribute('title', title);\n        }\n        const text = this.getFormattedDate();\n        if (text) {\n            this.textContent = text;\n        }\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n        const oldTitle = this.getFormattedTitle();\n        if (attrName === 'datetime') {\n            const millis = Date.parse(newValue);\n            if (isNaN(millis)) {\n                datetimes.delete(this);\n            }\n            else {\n                datetimes.set(this, new Date(millis));\n            }\n        }\n        const title = this.getFormattedTitle();\n        const currentTitle = this.getAttribute('title');\n        if (attrName !== 'title' && title && (!currentTitle || currentTitle === oldTitle)) {\n            this.setAttribute('title', title);\n        }\n        const text = this.getFormattedDate();\n        if (text) {\n            this.textContent = text;\n        }\n    }\n    get date() {\n        return datetimes.get(this);\n    }\n    getFormattedTitle() {\n        const date = this.date;\n        if (!date)\n            return;\n        const formatter = titleFormatter();\n        if (formatter) {\n            return formatter.format(date);\n        }\n        else {\n            try {\n                return date.toLocaleString();\n            }\n            catch (e) {\n                if (e instanceof RangeError) {\n                    return date.toString();\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n    }\n    getFormattedDate() {\n        return;\n    }\n}\nconst titleFormatter = makeFormatter({\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    timeZoneName: 'short'\n});\n\nconst formatters = new WeakMap();\nclass LocalTimeElement extends ExtendedTimeElement {\n    attributeChangedCallback(attrName, oldValue, newValue) {\n        if (attrName === 'hour' || attrName === 'minute' || attrName === 'second' || attrName === 'time-zone-name') {\n            formatters.delete(this);\n        }\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n    }\n    getFormattedDate() {\n        const d = this.date;\n        if (!d)\n            return;\n        const date = formatDate(this, d) || '';\n        const time = formatTime(this, d) || '';\n        return `${date} ${time}`.trim();\n    }\n}\nfunction formatDate(el, date) {\n    const props = {\n        weekday: {\n            short: '%a',\n            long: '%A'\n        },\n        day: {\n            numeric: '%e',\n            '2-digit': '%d'\n        },\n        month: {\n            short: '%b',\n            long: '%B'\n        },\n        year: {\n            numeric: '%Y',\n            '2-digit': '%y'\n        }\n    };\n    let format = isDayFirst() ? 'weekday day month year' : 'weekday month day, year';\n    for (const prop in props) {\n        const value = props[prop][el.getAttribute(prop) || ''];\n        format = format.replace(prop, value || '');\n    }\n    format = format.replace(/(\\s,)|(,\\s$)/, '');\n    return strftime(date, format).replace(/\\s+/, ' ').trim();\n}\nfunction formatTime(el, date) {\n    const options = {};\n    const hour = el.getAttribute('hour');\n    if (hour === 'numeric' || hour === '2-digit')\n        options.hour = hour;\n    const minute = el.getAttribute('minute');\n    if (minute === 'numeric' || minute === '2-digit')\n        options.minute = minute;\n    const second = el.getAttribute('second');\n    if (second === 'numeric' || second === '2-digit')\n        options.second = second;\n    const tz = el.getAttribute('time-zone-name');\n    if (tz === 'short' || tz === 'long')\n        options.timeZoneName = tz;\n    if (Object.keys(options).length === 0) {\n        return;\n    }\n    let factory = formatters.get(el);\n    if (!factory) {\n        factory = makeFormatter(options);\n        formatters.set(el, factory);\n    }\n    const formatter = factory();\n    if (formatter) {\n        return formatter.format(date);\n    }\n    else {\n        const timef = options.second ? '%H:%M:%S' : '%H:%M';\n        return strftime(date, timef);\n    }\n}\nif (!window.customElements.get('local-time')) {\n    window.LocalTimeElement = LocalTimeElement;\n    window.customElements.define('local-time', LocalTimeElement);\n}\n\nclass RelativeTime {\n    constructor(date, locale) {\n        this.date = date;\n        this.locale = locale;\n    }\n    toString() {\n        const ago = this.timeElapsed();\n        if (ago) {\n            return ago;\n        }\n        else {\n            const ahead = this.timeAhead();\n            if (ahead) {\n                return ahead;\n            }\n            else {\n                return `on ${this.formatDate()}`;\n            }\n        }\n    }\n    timeElapsed() {\n        const ms = new Date().getTime() - this.date.getTime();\n        const sec = Math.round(ms / 1000);\n        const min = Math.round(sec / 60);\n        const hr = Math.round(min / 60);\n        const day = Math.round(hr / 24);\n        if (ms >= 0 && day < 30) {\n            return this.timeAgoFromMs(ms);\n        }\n        else {\n            return null;\n        }\n    }\n    timeAhead() {\n        const ms = this.date.getTime() - new Date().getTime();\n        const sec = Math.round(ms / 1000);\n        const min = Math.round(sec / 60);\n        const hr = Math.round(min / 60);\n        const day = Math.round(hr / 24);\n        if (ms >= 0 && day < 30) {\n            return this.timeUntil();\n        }\n        else {\n            return null;\n        }\n    }\n    timeAgo() {\n        const ms = new Date().getTime() - this.date.getTime();\n        return this.timeAgoFromMs(ms);\n    }\n    timeAgoFromMs(ms) {\n        const sec = Math.round(ms / 1000);\n        const min = Math.round(sec / 60);\n        const hr = Math.round(min / 60);\n        const day = Math.round(hr / 24);\n        const month = Math.round(day / 30);\n        const year = Math.round(month / 12);\n        if (ms < 0) {\n            return formatRelativeTime(this.locale, 0, 'second');\n        }\n        else if (sec < 10) {\n            return formatRelativeTime(this.locale, 0, 'second');\n        }\n        else if (sec < 45) {\n            return formatRelativeTime(this.locale, -sec, 'second');\n        }\n        else if (sec < 90) {\n            return formatRelativeTime(this.locale, -min, 'minute');\n        }\n        else if (min < 45) {\n            return formatRelativeTime(this.locale, -min, 'minute');\n        }\n        else if (min < 90) {\n            return formatRelativeTime(this.locale, -hr, 'hour');\n        }\n        else if (hr < 24) {\n            return formatRelativeTime(this.locale, -hr, 'hour');\n        }\n        else if (hr < 36) {\n            return formatRelativeTime(this.locale, -day, 'day');\n        }\n        else if (day < 30) {\n            return formatRelativeTime(this.locale, -day, 'day');\n        }\n        else if (month < 18) {\n            return formatRelativeTime(this.locale, -month, 'month');\n        }\n        else {\n            return formatRelativeTime(this.locale, -year, 'year');\n        }\n    }\n    microTimeAgo() {\n        const ms = new Date().getTime() - this.date.getTime();\n        const sec = Math.round(ms / 1000);\n        const min = Math.round(sec / 60);\n        const hr = Math.round(min / 60);\n        const day = Math.round(hr / 24);\n        const month = Math.round(day / 30);\n        const year = Math.round(month / 12);\n        if (min < 1) {\n            return '1m';\n        }\n        else if (min < 60) {\n            return `${min}m`;\n        }\n        else if (hr < 24) {\n            return `${hr}h`;\n        }\n        else if (day < 365) {\n            return `${day}d`;\n        }\n        else {\n            return `${year}y`;\n        }\n    }\n    timeUntil() {\n        const ms = this.date.getTime() - new Date().getTime();\n        return this.timeUntilFromMs(ms);\n    }\n    timeUntilFromMs(ms) {\n        const sec = Math.round(ms / 1000);\n        const min = Math.round(sec / 60);\n        const hr = Math.round(min / 60);\n        const day = Math.round(hr / 24);\n        const month = Math.round(day / 30);\n        const year = Math.round(month / 12);\n        if (month >= 18) {\n            return formatRelativeTime(this.locale, year, 'year');\n        }\n        else if (month >= 12) {\n            return formatRelativeTime(this.locale, year, 'year');\n        }\n        else if (day >= 45) {\n            return formatRelativeTime(this.locale, month, 'month');\n        }\n        else if (day >= 30) {\n            return formatRelativeTime(this.locale, month, 'month');\n        }\n        else if (hr >= 36) {\n            return formatRelativeTime(this.locale, day, 'day');\n        }\n        else if (hr >= 24) {\n            return formatRelativeTime(this.locale, day, 'day');\n        }\n        else if (min >= 90) {\n            return formatRelativeTime(this.locale, hr, 'hour');\n        }\n        else if (min >= 45) {\n            return formatRelativeTime(this.locale, hr, 'hour');\n        }\n        else if (sec >= 90) {\n            return formatRelativeTime(this.locale, min, 'minute');\n        }\n        else if (sec >= 45) {\n            return formatRelativeTime(this.locale, min, 'minute');\n        }\n        else if (sec >= 10) {\n            return formatRelativeTime(this.locale, sec, 'second');\n        }\n        else {\n            return formatRelativeTime(this.locale, 0, 'second');\n        }\n    }\n    microTimeUntil() {\n        const ms = this.date.getTime() - new Date().getTime();\n        const sec = Math.round(ms / 1000);\n        const min = Math.round(sec / 60);\n        const hr = Math.round(min / 60);\n        const day = Math.round(hr / 24);\n        const month = Math.round(day / 30);\n        const year = Math.round(month / 12);\n        if (day >= 365) {\n            return `${year}y`;\n        }\n        else if (hr >= 24) {\n            return `${day}d`;\n        }\n        else if (min >= 60) {\n            return `${hr}h`;\n        }\n        else if (min > 1) {\n            return `${min}m`;\n        }\n        else {\n            return '1m';\n        }\n    }\n    formatDate() {\n        let format = isDayFirst() ? '%e %b' : '%b %e';\n        if (!isThisYear(this.date)) {\n            format += isYearSeparator() ? ', %Y' : ' %Y';\n        }\n        return strftime(this.date, format);\n    }\n    formatTime() {\n        const formatter = timeFormatter();\n        if (formatter) {\n            return formatter.format(this.date);\n        }\n        else {\n            return strftime(this.date, '%l:%M%P');\n        }\n    }\n}\nfunction formatRelativeTime(locale, value, unit) {\n    const formatter = makeRelativeFormat(locale, { numeric: 'auto' });\n    if (formatter) {\n        return formatter.format(value, unit);\n    }\n    else {\n        return formatEnRelativeTime(value, unit);\n    }\n}\nfunction formatEnRelativeTime(value, unit) {\n    if (value === 0) {\n        switch (unit) {\n            case 'year':\n            case 'quarter':\n            case 'month':\n            case 'week':\n                return `this ${unit}`;\n            case 'day':\n                return 'today';\n            case 'hour':\n            case 'minute':\n                return `in 0 ${unit}s`;\n            case 'second':\n                return 'now';\n        }\n    }\n    else if (value === 1) {\n        switch (unit) {\n            case 'year':\n            case 'quarter':\n            case 'month':\n            case 'week':\n                return `next ${unit}`;\n            case 'day':\n                return 'tomorrow';\n            case 'hour':\n            case 'minute':\n            case 'second':\n                return `in 1 ${unit}`;\n        }\n    }\n    else if (value === -1) {\n        switch (unit) {\n            case 'year':\n            case 'quarter':\n            case 'month':\n            case 'week':\n                return `last ${unit}`;\n            case 'day':\n                return 'yesterday';\n            case 'hour':\n            case 'minute':\n            case 'second':\n                return `1 ${unit} ago`;\n        }\n    }\n    else if (value > 1) {\n        switch (unit) {\n            case 'year':\n            case 'quarter':\n            case 'month':\n            case 'week':\n            case 'day':\n            case 'hour':\n            case 'minute':\n            case 'second':\n                return `in ${value} ${unit}s`;\n        }\n    }\n    else if (value < -1) {\n        switch (unit) {\n            case 'year':\n            case 'quarter':\n            case 'month':\n            case 'week':\n            case 'day':\n            case 'hour':\n            case 'minute':\n            case 'second':\n                return `${-value} ${unit}s ago`;\n        }\n    }\n    throw new RangeError(`Invalid unit argument for format() '${unit}'`);\n}\nconst timeFormatter = makeFormatter({ hour: 'numeric', minute: '2-digit' });\n\nclass RelativeTimeElement extends ExtendedTimeElement {\n    getFormattedDate() {\n        const date = this.date;\n        if (!date)\n            return;\n        return new RelativeTime(date, localeFromElement(this)).toString();\n    }\n    connectedCallback() {\n        nowElements.push(this);\n        if (!updateNowElementsId) {\n            updateNowElements();\n            updateNowElementsId = window.setInterval(updateNowElements, 60 * 1000);\n        }\n        super.connectedCallback();\n    }\n    disconnectedCallback() {\n        const ix = nowElements.indexOf(this);\n        if (ix !== -1) {\n            nowElements.splice(ix, 1);\n        }\n        if (!nowElements.length) {\n            if (updateNowElementsId) {\n                clearInterval(updateNowElementsId);\n                updateNowElementsId = null;\n            }\n        }\n    }\n}\nconst nowElements = [];\nlet updateNowElementsId;\nfunction updateNowElements() {\n    let time, i, len;\n    for (i = 0, len = nowElements.length; i < len; i++) {\n        time = nowElements[i];\n        time.textContent = time.getFormattedDate() || '';\n    }\n}\nif (!window.customElements.get('relative-time')) {\n    window.RelativeTimeElement = RelativeTimeElement;\n    window.customElements.define('relative-time', RelativeTimeElement);\n}\n\nclass TimeAgoElement extends RelativeTimeElement {\n    getFormattedDate() {\n        const format = this.getAttribute('format');\n        const date = this.date;\n        if (!date)\n            return;\n        if (format === 'micro') {\n            return new RelativeTime(date, localeFromElement(this)).microTimeAgo();\n        }\n        else {\n            return new RelativeTime(date, localeFromElement(this)).timeAgo();\n        }\n    }\n}\nif (!window.customElements.get('time-ago')) {\n    window.TimeAgoElement = TimeAgoElement;\n    window.customElements.define('time-ago', TimeAgoElement);\n}\n\nclass TimeUntilElement extends RelativeTimeElement {\n    getFormattedDate() {\n        const format = this.getAttribute('format');\n        const date = this.date;\n        if (!date)\n            return;\n        if (format === 'micro') {\n            return new RelativeTime(date, localeFromElement(this)).microTimeUntil();\n        }\n        else {\n            return new RelativeTime(date, localeFromElement(this)).timeUntil();\n        }\n    }\n}\nif (!window.customElements.get('time-until')) {\n    window.TimeUntilElement = TimeUntilElement;\n    window.customElements.define('time-until', TimeUntilElement);\n}\n\nexport { LocalTimeElement, RelativeTimeElement, TimeAgoElement, TimeUntilElement };\n"],"sourceRoot":""}