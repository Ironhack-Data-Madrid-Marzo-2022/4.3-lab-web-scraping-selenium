{"version":3,"sources":["node_modules/delegated-events/node_modules/selector-set/selector-set.next.js","node_modules/delegated-events/dist/index.js","node_modules/@github/catalyst/lib/bind.js","node_modules/@github/catalyst/lib/findtarget.js","node_modules/@github/catalyst/lib/target.js","node_modules/@github/catalyst/lib/register.js","node_modules/@github/catalyst/lib/auto-shadow-root.js","node_modules/@github/catalyst/lib/attr.js","node_modules/@github/catalyst/lib/core.js","node_modules/@github/catalyst/lib/controller.js","node_modules/@github/hotkey/dist/index.js"],"names":[],"mappings":"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","file":"7749-xxxxxxxxxxxx.js","sourcesContent":["// Public: Create a new SelectorSet.\nexport default function SelectorSet() {\n  // Construct new SelectorSet if called as a function.\n  if (!(this instanceof SelectorSet)) {\n    return new SelectorSet();\n  }\n\n  // Public: Number of selectors added to the set\n  this.size = 0;\n\n  // Internal: Incrementing ID counter\n  this.uid = 0;\n\n  // Internal: Array of String selectors in the set\n  this.selectors = [];\n\n  // Internal: Map of selector ids to objects\n  this.selectorObjects = {};\n\n  // Internal: All Object index String names mapping to Index objects.\n  this.indexes = Object.create(this.indexes);\n\n  // Internal: Used Object index String names mapping to Index objects.\n  this.activeIndexes = [];\n}\n\n// Detect prefixed Element#matches function.\nvar docElem = window.document.documentElement;\nvar matches =\n  docElem.matches ||\n  docElem.webkitMatchesSelector ||\n  docElem.mozMatchesSelector ||\n  docElem.oMatchesSelector ||\n  docElem.msMatchesSelector;\n\n// Public: Check if element matches selector.\n//\n// Maybe overridden with custom Element.matches function.\n//\n// el       - An Element\n// selector - String CSS selector\n//\n// Returns true or false.\nSelectorSet.prototype.matchesSelector = function(el, selector) {\n  return matches.call(el, selector);\n};\n\n// Public: Find all elements in the context that match the selector.\n//\n// Maybe overridden with custom querySelectorAll function.\n//\n// selectors - String CSS selectors.\n// context   - Element context\n//\n// Returns non-live list of Elements.\nSelectorSet.prototype.querySelectorAll = function(selectors, context) {\n  return context.querySelectorAll(selectors);\n};\n\n// Public: Array of indexes.\n//\n// name     - Unique String name\n// selector - Function that takes a String selector and returns a String key\n//            or undefined if it can't be used by the index.\n// element  - Function that takes an Element and returns an Array of String\n//            keys that point to indexed values.\n//\nSelectorSet.prototype.indexes = [];\n\n// Index by element id\nvar idRe = /^#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'ID',\n  selector: function matchIdSelector(sel) {\n    var m;\n    if ((m = sel.match(idRe))) {\n      return m[0].slice(1);\n    }\n  },\n  element: function getElementId(el) {\n    if (el.id) {\n      return [el.id];\n    }\n  }\n});\n\n// Index by all of its class names\nvar classRe = /^\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'CLASS',\n  selector: function matchClassSelector(sel) {\n    var m;\n    if ((m = sel.match(classRe))) {\n      return m[0].slice(1);\n    }\n  },\n  element: function getElementClassNames(el) {\n    var className = el.className;\n    if (className) {\n      if (typeof className === 'string') {\n        return className.split(/\\s/);\n      } else if (typeof className === 'object' && 'baseVal' in className) {\n        // className is a SVGAnimatedString\n        // global SVGAnimatedString is not an exposed global in Opera 12\n        return className.baseVal.split(/\\s/);\n      }\n    }\n  }\n});\n\n// Index by tag/node name: `DIV`, `FORM`, `A`\nvar tagRe = /^((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'TAG',\n  selector: function matchTagSelector(sel) {\n    var m;\n    if ((m = sel.match(tagRe))) {\n      return m[0].toUpperCase();\n    }\n  },\n  element: function getElementTagName(el) {\n    return [el.nodeName.toUpperCase()];\n  }\n});\n\n// Default index just contains a single array of elements.\nSelectorSet.prototype.indexes['default'] = {\n  name: 'UNIVERSAL',\n  selector: function() {\n    return true;\n  },\n  element: function() {\n    return [true];\n  }\n};\n\n// Use ES Maps when supported\nvar Map;\nif (typeof window.Map === 'function') {\n  Map = window.Map;\n} else {\n  Map = (function() {\n    function Map() {\n      this.map = {};\n    }\n    Map.prototype.get = function(key) {\n      return this.map[key + ' '];\n    };\n    Map.prototype.set = function(key, value) {\n      this.map[key + ' '] = value;\n    };\n    return Map;\n  })();\n}\n\n// Regexps adopted from Sizzle\n//   https://github.com/jquery/sizzle/blob/1.7/sizzle.js\n//\nvar chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g;\n\n// Internal: Get indexes for selector.\n//\n// selector - String CSS selector\n//\n// Returns Array of {index, key}.\nfunction parseSelectorIndexes(allIndexes, selector) {\n  allIndexes = allIndexes.slice(0).concat(allIndexes['default']);\n\n  var allIndexesLen = allIndexes.length,\n    i,\n    j,\n    m,\n    dup,\n    rest = selector,\n    key,\n    index,\n    indexes = [];\n\n  do {\n    chunker.exec('');\n    if ((m = chunker.exec(rest))) {\n      rest = m[3];\n      if (m[2] || !rest) {\n        for (i = 0; i < allIndexesLen; i++) {\n          index = allIndexes[i];\n          if ((key = index.selector(m[1]))) {\n            j = indexes.length;\n            dup = false;\n            while (j--) {\n              if (indexes[j].index === index && indexes[j].key === key) {\n                dup = true;\n                break;\n              }\n            }\n            if (!dup) {\n              indexes.push({ index: index, key: key });\n            }\n            break;\n          }\n        }\n      }\n    }\n  } while (m);\n\n  return indexes;\n}\n\n// Internal: Find first item in Array that is a prototype of `proto`.\n//\n// ary   - Array of objects\n// proto - Prototype of expected item in `ary`\n//\n// Returns object from `ary` if found. Otherwise returns undefined.\nfunction findByPrototype(ary, proto) {\n  var i, len, item;\n  for (i = 0, len = ary.length; i < len; i++) {\n    item = ary[i];\n    if (proto.isPrototypeOf(item)) {\n      return item;\n    }\n  }\n}\n\n// Public: Log when added selector falls under the default index.\n//\n// This API should not be considered stable. May change between\n// minor versions.\n//\n// obj - {selector, data} Object\n//\n//   SelectorSet.prototype.logDefaultIndexUsed = function(obj) {\n//     console.warn(obj.selector, \"could not be indexed\");\n//   };\n//\n// Returns nothing.\nSelectorSet.prototype.logDefaultIndexUsed = function() {};\n\n// Public: Add selector to set.\n//\n// selector - String CSS selector\n// data     - Optional data Object (default: undefined)\n//\n// Returns nothing.\nSelectorSet.prototype.add = function(selector, data) {\n  var obj,\n    i,\n    indexProto,\n    key,\n    index,\n    objs,\n    selectorIndexes,\n    selectorIndex,\n    indexes = this.activeIndexes,\n    selectors = this.selectors,\n    selectorObjects = this.selectorObjects;\n\n  if (typeof selector !== 'string') {\n    return;\n  }\n\n  obj = {\n    id: this.uid++,\n    selector: selector,\n    data: data\n  };\n  selectorObjects[obj.id] = obj;\n\n  selectorIndexes = parseSelectorIndexes(this.indexes, selector);\n  for (i = 0; i < selectorIndexes.length; i++) {\n    selectorIndex = selectorIndexes[i];\n    key = selectorIndex.key;\n    indexProto = selectorIndex.index;\n\n    index = findByPrototype(indexes, indexProto);\n    if (!index) {\n      index = Object.create(indexProto);\n      index.map = new Map();\n      indexes.push(index);\n    }\n\n    if (indexProto === this.indexes['default']) {\n      this.logDefaultIndexUsed(obj);\n    }\n    objs = index.map.get(key);\n    if (!objs) {\n      objs = [];\n      index.map.set(key, objs);\n    }\n    objs.push(obj);\n  }\n\n  this.size++;\n  selectors.push(selector);\n};\n\n// Public: Remove selector from set.\n//\n// selector - String CSS selector\n// data     - Optional data Object (default: undefined)\n//\n// Returns nothing.\nSelectorSet.prototype.remove = function(selector, data) {\n  if (typeof selector !== 'string') {\n    return;\n  }\n\n  var selectorIndexes,\n    selectorIndex,\n    i,\n    j,\n    k,\n    selIndex,\n    objs,\n    obj,\n    indexes = this.activeIndexes,\n    selectors = (this.selectors = []),\n    selectorObjects = this.selectorObjects,\n    removedIds = {},\n    removeAll = arguments.length === 1;\n\n  selectorIndexes = parseSelectorIndexes(this.indexes, selector);\n  for (i = 0; i < selectorIndexes.length; i++) {\n    selectorIndex = selectorIndexes[i];\n\n    j = indexes.length;\n    while (j--) {\n      selIndex = indexes[j];\n      if (selectorIndex.index.isPrototypeOf(selIndex)) {\n        objs = selIndex.map.get(selectorIndex.key);\n        if (objs) {\n          k = objs.length;\n          while (k--) {\n            obj = objs[k];\n            if (obj.selector === selector && (removeAll || obj.data === data)) {\n              objs.splice(k, 1);\n              removedIds[obj.id] = true;\n            }\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  for (i in removedIds) {\n    delete selectorObjects[i];\n    this.size--;\n  }\n\n  for (i in selectorObjects) {\n    selectors.push(selectorObjects[i].selector);\n  }\n};\n\n// Sort by id property handler.\n//\n// a - Selector obj.\n// b - Selector obj.\n//\n// Returns Number.\nfunction sortById(a, b) {\n  return a.id - b.id;\n}\n\n// Public: Find all matching decendants of the context element.\n//\n// context - An Element\n//\n// Returns Array of {selector, data, elements} matches.\nSelectorSet.prototype.queryAll = function(context) {\n  if (!this.selectors.length) {\n    return [];\n  }\n\n  var matches = {},\n    results = [];\n  var els = this.querySelectorAll(this.selectors.join(', '), context);\n\n  var i, j, len, len2, el, m, match, obj;\n  for (i = 0, len = els.length; i < len; i++) {\n    el = els[i];\n    m = this.matches(el);\n    for (j = 0, len2 = m.length; j < len2; j++) {\n      obj = m[j];\n      if (!matches[obj.id]) {\n        match = {\n          id: obj.id,\n          selector: obj.selector,\n          data: obj.data,\n          elements: []\n        };\n        matches[obj.id] = match;\n        results.push(match);\n      } else {\n        match = matches[obj.id];\n      }\n      match.elements.push(el);\n    }\n  }\n\n  return results.sort(sortById);\n};\n\n// Public: Match element against all selectors in set.\n//\n// el - An Element\n//\n// Returns Array of {selector, data} matches.\nSelectorSet.prototype.matches = function(el) {\n  if (!el) {\n    return [];\n  }\n\n  var i, j, k, len, len2, len3, index, keys, objs, obj, id;\n  var indexes = this.activeIndexes,\n    matchedIds = {},\n    matches = [];\n\n  for (i = 0, len = indexes.length; i < len; i++) {\n    index = indexes[i];\n    keys = index.element(el);\n    if (keys) {\n      for (j = 0, len2 = keys.length; j < len2; j++) {\n        if ((objs = index.map.get(keys[j]))) {\n          for (k = 0, len3 = objs.length; k < len3; k++) {\n            obj = objs[k];\n            id = obj.id;\n            if (!matchedIds[id] && this.matchesSelector(el, obj.selector)) {\n              matchedIds[id] = true;\n              matches.push(obj);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return matches.sort(sortById);\n};\n","import SelectorSet from 'selector-set';\n\nvar bubbleEvents = {};\nvar captureEvents = {};\nvar propagationStopped = new WeakMap();\nvar immediatePropagationStopped = new WeakMap();\nvar currentTargets = new WeakMap();\nvar currentTargetDesc = Object.getOwnPropertyDescriptor(Event.prototype, 'currentTarget');\n\nfunction before(subject, verb, fn) {\n  var source = subject[verb];\n\n  subject[verb] = function () {\n    fn.apply(subject, arguments);\n    return source.apply(subject, arguments);\n  };\n\n  return subject;\n}\n\nfunction matches(selectors, target, reverse) {\n  var queue = [];\n  var node = target;\n\n  do {\n    if (node.nodeType !== 1) break;\n\n    var _matches = selectors.matches(node);\n\n    if (_matches.length) {\n      var matched = {\n        node: node,\n        observers: _matches\n      };\n\n      if (reverse) {\n        queue.unshift(matched);\n      } else {\n        queue.push(matched);\n      }\n    }\n  } while (node = node.parentElement);\n\n  return queue;\n}\n\nfunction trackPropagation() {\n  propagationStopped.set(this, true);\n}\n\nfunction trackImmediate() {\n  propagationStopped.set(this, true);\n  immediatePropagationStopped.set(this, true);\n}\n\nfunction getCurrentTarget() {\n  return currentTargets.get(this) || null;\n}\n\nfunction defineCurrentTarget(event, getter) {\n  if (!currentTargetDesc) return;\n  Object.defineProperty(event, 'currentTarget', {\n    configurable: true,\n    enumerable: true,\n    get: getter || currentTargetDesc.get\n  });\n}\n\nfunction canDispatch(event) {\n  try {\n    event.eventPhase;\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction dispatch(event) {\n  if (!canDispatch(event)) return;\n  var events = event.eventPhase === 1 ? captureEvents : bubbleEvents;\n  var selectors = events[event.type];\n  if (!selectors) return;\n  var queue = matches(selectors, event.target, event.eventPhase === 1);\n  if (!queue.length) return;\n  before(event, 'stopPropagation', trackPropagation);\n  before(event, 'stopImmediatePropagation', trackImmediate);\n  defineCurrentTarget(event, getCurrentTarget);\n\n  for (var i = 0, len1 = queue.length; i < len1; i++) {\n    if (propagationStopped.get(event)) break;\n    var matched = queue[i];\n    currentTargets.set(event, matched.node);\n\n    for (var j = 0, len2 = matched.observers.length; j < len2; j++) {\n      if (immediatePropagationStopped.get(event)) break;\n      matched.observers[j].data.call(matched.node, event);\n    }\n  }\n\n  currentTargets[\"delete\"](event);\n  defineCurrentTarget(event);\n}\n\nfunction on(name, selector, fn) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var capture = options.capture ? true : false;\n  var events = capture ? captureEvents : bubbleEvents;\n  var selectors = events[name];\n\n  if (!selectors) {\n    selectors = new SelectorSet();\n    events[name] = selectors;\n    document.addEventListener(name, dispatch, capture);\n  }\n\n  selectors.add(selector, fn);\n}\nfunction off(name, selector, fn) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var capture = options.capture ? true : false;\n  var events = capture ? captureEvents : bubbleEvents;\n  var selectors = events[name];\n  if (!selectors) return;\n  selectors.remove(selector, fn);\n  if (selectors.size) return;\n  delete events[name];\n  document.removeEventListener(name, dispatch, capture);\n}\nfunction fire(target, name, detail) {\n  return target.dispatchEvent(new CustomEvent(name, {\n    bubbles: true,\n    cancelable: true,\n    detail: detail\n  }));\n}\n\nexport { fire, off, on };\n","const controllers = new WeakSet();\n/*\n * Bind `[data-action]` elements from the DOM to their actions.\n *\n */\nexport function bind(controller) {\n    controllers.add(controller);\n    if (controller.shadowRoot)\n        bindShadow(controller.shadowRoot);\n    bindElements(controller);\n    listenForBind(controller.ownerDocument);\n}\nexport function bindShadow(root) {\n    bindElements(root);\n    listenForBind(root);\n}\nconst observers = new WeakMap();\n/**\n * Set up observer that will make sure any actions that are dynamically\n * injected into `el` will be bound to it's controller.\n *\n * This returns a Subscription object which you can call `unsubscribe()` on to\n * stop further live updates.\n */\nexport function listenForBind(el = document) {\n    if (observers.has(el))\n        return observers.get(el);\n    let closed = false;\n    const observer = new MutationObserver(mutations => {\n        for (const mutation of mutations) {\n            if (mutation.type === 'attributes' && mutation.target instanceof Element) {\n                bindActions(mutation.target);\n            }\n            else if (mutation.type === 'childList' && mutation.addedNodes.length) {\n                for (const node of mutation.addedNodes) {\n                    if (node instanceof Element) {\n                        bindElements(node);\n                    }\n                }\n            }\n        }\n    });\n    observer.observe(el, { childList: true, subtree: true, attributeFilter: ['data-action'] });\n    const subscription = {\n        get closed() {\n            return closed;\n        },\n        unsubscribe() {\n            closed = true;\n            observers.delete(el);\n            observer.disconnect();\n        }\n    };\n    observers.set(el, subscription);\n    return subscription;\n}\nfunction bindElements(root) {\n    for (const el of root.querySelectorAll('[data-action]')) {\n        bindActions(el);\n    }\n    // Also bind the controller to itself\n    if (root instanceof Element && root.hasAttribute('data-action')) {\n        bindActions(root);\n    }\n}\n// Bind a single function to all events to avoid anonymous closure performance penalty.\nfunction handleEvent(event) {\n    const el = event.currentTarget;\n    for (const binding of bindings(el)) {\n        if (event.type === binding.type) {\n            const controller = el.closest(binding.tag);\n            if (controllers.has(controller) && typeof controller[binding.method] === 'function') {\n                controller[binding.method](event);\n            }\n            const root = el.getRootNode();\n            if (root instanceof ShadowRoot && controllers.has(root.host) && root.host.matches(binding.tag)) {\n                const shadowController = root.host;\n                if (typeof shadowController[binding.method] === 'function') {\n                    shadowController[binding.method](event);\n                }\n            }\n        }\n    }\n}\nfunction* bindings(el) {\n    for (const action of (el.getAttribute('data-action') || '').trim().split(/\\s+/)) {\n        const eventSep = action.lastIndexOf(':');\n        const methodSep = Math.max(0, action.lastIndexOf('#')) || action.length;\n        yield {\n            type: action.slice(0, eventSep),\n            tag: action.slice(eventSep + 1, methodSep),\n            method: action.slice(methodSep + 1) || 'handleEvent'\n        } || 'handleEvent';\n    }\n}\nfunction bindActions(el) {\n    for (const binding of bindings(el)) {\n        el.addEventListener(binding.type, handleEvent);\n    }\n}\n//# sourceMappingURL=bind.js.map","/**\n * findTarget will run `querySelectorAll` against the given controller, plus\n * its shadowRoot, returning any the first child that:\n *\n *  - Matches the selector of `[data-target~=\"tag.name\"]` where tag is the\n *  tagName of the given HTMLElement, and `name` is the given `name` argument.\n *\n *  - Closest ascendant of the element, that matches the tagname of the\n *  controller, is the specific instance of the controller itself - in other\n *  words it is not nested in other controllers of the same type.\n *\n */\nexport function findTarget(controller, name) {\n    const tag = controller.tagName.toLowerCase();\n    if (controller.shadowRoot) {\n        for (const el of controller.shadowRoot.querySelectorAll(`[data-target~=\"${tag}.${name}\"]`)) {\n            if (!el.closest(tag))\n                return el;\n        }\n    }\n    for (const el of controller.querySelectorAll(`[data-target~=\"${tag}.${name}\"]`)) {\n        if (el.closest(tag) === controller)\n            return el;\n    }\n}\nexport function findTargets(controller, name) {\n    const tag = controller.tagName.toLowerCase();\n    const targets = [];\n    if (controller.shadowRoot) {\n        for (const el of controller.shadowRoot.querySelectorAll(`[data-targets~=\"${tag}.${name}\"]`)) {\n            if (!el.closest(tag))\n                targets.push(el);\n        }\n    }\n    for (const el of controller.querySelectorAll(`[data-targets~=\"${tag}.${name}\"]`)) {\n        if (el.closest(tag) === controller)\n            targets.push(el);\n    }\n    return targets;\n}\n//# sourceMappingURL=findtarget.js.map","import { findTarget, findTargets } from './findtarget.js';\n/**\n * Target is a decorator which - when assigned to a property field on the\n * class - will override that class field, turning it into a Getter which\n * returns a call to `findTarget(this, key)` where `key` is the name of the\n * property field. In other words, `@target foo` becomes a getter for\n * `findTarget(this, 'foo')`.\n */\nexport function target(proto, key) {\n    return Object.defineProperty(proto, key, {\n        configurable: true,\n        get() {\n            return findTarget(this, key);\n        }\n    });\n}\n/**\n * Targets is a decorator which - when assigned to a property field on the\n * class - will override that class field, turning it into a Getter which\n * returns a call to `findTargets(this, key)` where `key` is the name of the\n * property field. In other words, `@targets foo` becomes a getter for\n * `findTargets(this, 'foo')`.\n */\nexport function targets(proto, key) {\n    return Object.defineProperty(proto, key, {\n        configurable: true,\n        get() {\n            return findTargets(this, key);\n        }\n    });\n}\n//# sourceMappingURL=target.js.map","/**\n * Register the controller as a custom element.\n *\n * The classname is converted to a approriate tag name.\n *\n * Example: HelloController => hello-controller\n */\nexport function register(classObject) {\n    const name = classObject.name\n        .replace(/([A-Z]($|[a-z]))/g, '-$1')\n        .replace(/(^-|-Element$)/g, '')\n        .toLowerCase();\n    if (!window.customElements.get(name)) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        window[classObject.name] = classObject;\n        window.customElements.define(name, classObject);\n    }\n}\n//# sourceMappingURL=register.js.map","export function autoShadowRoot(element) {\n    for (const template of element.querySelectorAll('template[data-shadowroot]')) {\n        if (template.parentElement === element) {\n            element\n                .attachShadow({\n                mode: template.getAttribute('data-shadowroot') === 'closed' ? 'closed' : 'open'\n            })\n                .append(template.content.cloneNode(true));\n        }\n    }\n}\n//# sourceMappingURL=auto-shadow-root.js.map","const attrs = new WeakMap();\n/**\n * Attr is a decorator which tags a property as one to be initialized via\n * `initializeAttrs`.\n *\n * The signature is typed such that the property must be one of a String,\n * Number or Boolean. This matches the behavior of `initializeAttrs`.\n */\nexport function attr(proto, key) {\n    if (!attrs.has(proto))\n        attrs.set(proto, []);\n    attrs.get(proto).push(key);\n}\n/**\n * initializeAttrs is called with a set of class property names (if omitted, it\n * will look for any properties tagged with the `@attr` decorator). With this\n * list it defines property descriptors for each property that map to `data-*`\n * attributes on the HTMLElement instance.\n *\n * It works around Native Class Property semantics - which are equivalent to\n * calling `Object.defineProperty` on the instance upon creation, but before\n * `constructor()` is called.\n *\n * If a class property is assigned to the class body, it will infer the type\n * (using `typeof`) and define an appropriate getter/setter combo that aligns\n * to that type. This means class properties assigned to Numbers can only ever\n * be Numbers, assigned to Booleans can only ever be Booleans, and assigned to\n * Strings can only ever be Strings.\n *\n * This is automatically called as part of `@controller`. If a class uses the\n * `@controller` decorator it should not call this manually.\n */\nexport function initializeAttrs(instance, names) {\n    if (!names)\n        names = getAttrNames(Object.getPrototypeOf(instance));\n    for (const key of names) {\n        const value = instance[key];\n        const name = attrToAttributeName(key);\n        let descriptor = {\n            configurable: true,\n            get() {\n                return this.getAttribute(name) || '';\n            },\n            set(newValue) {\n                this.setAttribute(name, newValue || '');\n            }\n        };\n        if (typeof value === 'number') {\n            descriptor = {\n                configurable: true,\n                get() {\n                    return Number(this.getAttribute(name) || 0);\n                },\n                set(newValue) {\n                    this.setAttribute(name, newValue);\n                }\n            };\n        }\n        else if (typeof value === 'boolean') {\n            descriptor = {\n                configurable: true,\n                get() {\n                    return this.hasAttribute(name);\n                },\n                set(newValue) {\n                    this.toggleAttribute(name, newValue);\n                }\n            };\n        }\n        Object.defineProperty(instance, key, descriptor);\n        if (key in instance && !instance.hasAttribute(name)) {\n            descriptor.set.call(instance, value);\n        }\n    }\n}\nfunction getAttrNames(classObjectProto) {\n    const names = new Set();\n    let proto = classObjectProto;\n    while (proto && proto !== HTMLElement) {\n        const attrNames = attrs.get(proto) || [];\n        for (const name of attrNames)\n            names.add(name);\n        proto = Object.getPrototypeOf(proto);\n    }\n    return names;\n}\nfunction attrToAttributeName(name) {\n    return `data-${name.replace(/([A-Z]($|[a-z]))/g, '-$1')}`.replace(/--/g, '-').toLowerCase();\n}\nexport function defineObservedAttributes(classObject) {\n    let observed = classObject.observedAttributes || [];\n    Object.defineProperty(classObject, 'observedAttributes', {\n        configurable: true,\n        get() {\n            const attrMap = getAttrNames(classObject.prototype);\n            return [...attrMap].map(attrToAttributeName).concat(observed);\n        },\n        set(attributes) {\n            observed = attributes;\n        }\n    });\n}\n//# sourceMappingURL=attr.js.map","import { register } from './register.js';\nimport { bind, bindShadow } from './bind.js';\nimport { autoShadowRoot } from './auto-shadow-root.js';\nimport { defineObservedAttributes, initializeAttrs } from './attr.js';\nconst instances = new WeakSet();\nexport function initializeInstance(instance, connect) {\n    instance.toggleAttribute('data-catalyst', true);\n    customElements.upgrade(instance);\n    instances.add(instance);\n    autoShadowRoot(instance);\n    initializeAttrs(instance);\n    bind(instance);\n    if (connect)\n        connect.call(instance);\n    if (instance.shadowRoot)\n        bindShadow(instance.shadowRoot);\n}\nexport function initializeClass(classObject) {\n    defineObservedAttributes(classObject);\n    register(classObject);\n}\nexport function initialized(el) {\n    return instances.has(el);\n}\n//# sourceMappingURL=core.js.map","import { initializeInstance, initializeClass } from './core.js';\n/**\n * Controller is a decorator to be used over a class that extends HTMLElement.\n * It will automatically `register()` the component in the customElement\n * registry, as well as ensuring `bind(this)` is called on `connectedCallback`,\n * wrapping the classes `connectedCallback` method if needed.\n */\nexport function controller(classObject) {\n    const connect = classObject.prototype.connectedCallback;\n    classObject.prototype.connectedCallback = function () {\n        initializeInstance(this, connect);\n    };\n    initializeClass(classObject);\n}\n//# sourceMappingURL=controller.js.map","class Leaf {\n    constructor(trie) {\n        this.children = [];\n        this.parent = trie;\n    }\n    delete(value) {\n        const index = this.children.indexOf(value);\n        if (index === -1)\n            return false;\n        this.children = this.children.slice(0, index).concat(this.children.slice(index + 1));\n        if (this.children.length === 0) {\n            this.parent.delete(this);\n        }\n        return true;\n    }\n    add(value) {\n        this.children.push(value);\n        return this;\n    }\n}\nclass RadixTrie {\n    constructor(trie) {\n        this.parent = null;\n        this.children = {};\n        this.parent = trie || null;\n    }\n    get(edge) {\n        return this.children[edge];\n    }\n    insert(edges) {\n        let currentNode = this;\n        for (let i = 0; i < edges.length; i += 1) {\n            const edge = edges[i];\n            let nextNode = currentNode.get(edge);\n            if (i === edges.length - 1) {\n                if (nextNode instanceof RadixTrie) {\n                    currentNode.delete(nextNode);\n                    nextNode = null;\n                }\n                if (!nextNode) {\n                    nextNode = new Leaf(currentNode);\n                    currentNode.children[edge] = nextNode;\n                }\n                return nextNode;\n            }\n            else {\n                if (nextNode instanceof Leaf)\n                    nextNode = null;\n                if (!nextNode) {\n                    nextNode = new RadixTrie(currentNode);\n                    currentNode.children[edge] = nextNode;\n                }\n            }\n            currentNode = nextNode;\n        }\n        return currentNode;\n    }\n    delete(node) {\n        for (const edge in this.children) {\n            const currentNode = this.children[edge];\n            if (currentNode === node) {\n                const success = delete this.children[edge];\n                if (Object.keys(this.children).length === 0 && this.parent) {\n                    this.parent.delete(this);\n                }\n                return success;\n            }\n        }\n        return false;\n    }\n}\n\nfunction isFormField(element) {\n    if (!(element instanceof HTMLElement)) {\n        return false;\n    }\n    const name = element.nodeName.toLowerCase();\n    const type = (element.getAttribute('type') || '').toLowerCase();\n    return (name === 'select' ||\n        name === 'textarea' ||\n        (name === 'input' && type !== 'submit' && type !== 'reset' && type !== 'checkbox' && type !== 'radio') ||\n        element.isContentEditable);\n}\nfunction fireDeterminedAction(el, path) {\n    const delegateEvent = new CustomEvent('hotkey-fire', { cancelable: true, detail: { path } });\n    const cancelled = !el.dispatchEvent(delegateEvent);\n    if (cancelled)\n        return;\n    if (isFormField(el)) {\n        el.focus();\n    }\n    else {\n        el.click();\n    }\n}\nfunction expandHotkeyToEdges(hotkey) {\n    const output = [];\n    let acc = [''];\n    let commaIsSeparator = false;\n    for (let i = 0; i < hotkey.length; i++) {\n        if (commaIsSeparator && hotkey[i] === ',') {\n            output.push(acc);\n            acc = [''];\n            commaIsSeparator = false;\n            continue;\n        }\n        if (hotkey[i] === ' ') {\n            acc.push('');\n            commaIsSeparator = false;\n            continue;\n        }\n        else if (hotkey[i] === '+') {\n            commaIsSeparator = false;\n        }\n        else {\n            commaIsSeparator = true;\n        }\n        acc[acc.length - 1] += hotkey[i];\n    }\n    output.push(acc);\n    return output.map(h => h.filter(k => k !== '')).filter(h => h.length > 0);\n}\n\nfunction hotkey(event) {\n    const { ctrlKey, altKey, metaKey, key } = event;\n    const hotkeyString = [];\n    const modifiers = [ctrlKey, altKey, metaKey, showShift(event)];\n    for (const [i, mod] of modifiers.entries()) {\n        if (mod)\n            hotkeyString.push(modifierKeyNames[i]);\n    }\n    if (!modifierKeyNames.includes(key)) {\n        hotkeyString.push(key);\n    }\n    return hotkeyString.join('+');\n}\nconst modifierKeyNames = [`Control`, 'Alt', 'Meta', 'Shift'];\nfunction showShift(event) {\n    const { shiftKey, code, key } = event;\n    return shiftKey && !(code.startsWith('Key') && key.toUpperCase() === key);\n}\n\nconst hotkeyRadixTrie = new RadixTrie();\nconst elementsLeaves = new WeakMap();\nlet currentTriePosition = hotkeyRadixTrie;\nlet resetTriePositionTimer = null;\nlet path = [];\nfunction resetTriePosition() {\n    path = [];\n    resetTriePositionTimer = null;\n    currentTriePosition = hotkeyRadixTrie;\n}\nfunction keyDownHandler(event) {\n    if (event.defaultPrevented)\n        return;\n    if (!(event.target instanceof Node))\n        return;\n    if (isFormField(event.target)) {\n        const target = event.target;\n        if (!target.id)\n            return;\n        if (!target.ownerDocument.querySelector(`[data-hotkey-scope=\"${target.id}\"]`))\n            return;\n    }\n    if (resetTriePositionTimer != null) {\n        window.clearTimeout(resetTriePositionTimer);\n    }\n    resetTriePositionTimer = window.setTimeout(resetTriePosition, 1500);\n    const newTriePosition = currentTriePosition.get(hotkey(event));\n    if (!newTriePosition) {\n        resetTriePosition();\n        return;\n    }\n    path.push(hotkey(event));\n    currentTriePosition = newTriePosition;\n    if (newTriePosition instanceof Leaf) {\n        const target = event.target;\n        let shouldFire = false;\n        let elementToFire;\n        const formField = isFormField(target);\n        for (let i = newTriePosition.children.length - 1; i >= 0; i -= 1) {\n            elementToFire = newTriePosition.children[i];\n            const scope = elementToFire.getAttribute('data-hotkey-scope');\n            if ((!formField && !scope) || (formField && target.id === scope)) {\n                shouldFire = true;\n                break;\n            }\n        }\n        if (elementToFire && shouldFire) {\n            fireDeterminedAction(elementToFire, path);\n            event.preventDefault();\n        }\n        resetTriePosition();\n    }\n}\nfunction install(element, hotkey) {\n    if (Object.keys(hotkeyRadixTrie.children).length === 0) {\n        document.addEventListener('keydown', keyDownHandler);\n    }\n    const hotkeys = expandHotkeyToEdges(hotkey || element.getAttribute('data-hotkey') || '');\n    const leaves = hotkeys.map(h => hotkeyRadixTrie.insert(h).add(element));\n    elementsLeaves.set(element, leaves);\n}\nfunction uninstall(element) {\n    const leaves = elementsLeaves.get(element);\n    if (leaves && leaves.length) {\n        for (const leaf of leaves) {\n            leaf && leaf.delete(element);\n        }\n    }\n    if (Object.keys(hotkeyRadixTrie.children).length === 0) {\n        document.removeEventListener('keydown', keyDownHandler);\n    }\n}\n\nexport { Leaf, RadixTrie, hotkey as eventToHotkeyString, install, uninstall };\n"],"sourceRoot":""}