{"version":3,"sources":["node_modules/selector-observer/dist/index.esm.js","node_modules/selector-set/selector-set.next.js"],"names":[],"mappings":"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","file":"5724-xxxxxxxxxxxx.js","sourcesContent":["import SelectorSet from 'selector-set';\n\nvar el = null;\nvar observer = null;\nvar queue = [];\n\nfunction scheduleBatch(document, callback) {\n  var calls = [];\n\n  function processBatchQueue() {\n    var callsCopy = calls;\n    calls = [];\n    callback(callsCopy);\n  }\n\n  function scheduleBatchQueue() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    calls.push(args);\n    if (calls.length === 1) scheduleMacroTask(document, processBatchQueue);\n  }\n\n  return scheduleBatchQueue;\n}\n\nfunction scheduleMacroTask(document, callback) {\n  if (!observer) {\n    observer = new MutationObserver(handleMutations);\n  }\n\n  if (!el) {\n    el = document.createElement('div');\n    observer.observe(el, { attributes: true });\n  }\n\n  queue.push(callback);\n  el.setAttribute('data-twiddle', '' + Date.now());\n}\n\nfunction handleMutations() {\n  var callbacks = queue;\n  queue = [];\n  for (var i = 0; i < callbacks.length; i++) {\n    try {\n      callbacks[i]();\n    } catch (error) {\n      setTimeout(function () {\n        throw error;\n      }, 0);\n    }\n  }\n}\n\n// selector-observer processes dom mutations in two phases. This module applies\n// the Change set from the first phase and invokes the any registered hooks.\n\nvar initMap = new WeakMap();\nvar initializerMap = new WeakMap();\nvar subscriptionMap = new WeakMap();\nvar addMap = new WeakMap();\n\nfunction applyChanges(selectorObserver, changes) {\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n    var type = change[0];\n    var el = change[1];\n    var observer = change[2];\n    if (type === ADD) {\n      runInit(observer, el);\n      runAdd(observer, el);\n    } else if (type === REMOVE) {\n      runRemove(observer, el);\n    } else if (type === REMOVE_ALL) {\n      runRemoveAll(selectorObserver.observers, el);\n    }\n  }\n}\n\n// Run observer node \"initialize\" callback once.\n// Call when observer selector matches node.\n//\n// observer - An observer Object.\n// el       - An Element\n//\n// Returns nothing.\nfunction runInit(observer, el) {\n  if (!(el instanceof observer.elementConstructor)) {\n    return;\n  }\n\n  var initIds = initMap.get(el);\n  if (!initIds) {\n    initIds = [];\n    initMap.set(el, initIds);\n  }\n\n  if (initIds.indexOf(observer.id) === -1) {\n    var initializer = void 0;\n    if (observer.initialize) {\n      initializer = observer.initialize.call(undefined, el);\n    }\n    if (initializer) {\n      var initializers = initializerMap.get(el);\n      if (!initializers) {\n        initializers = {};\n        initializerMap.set(el, initializers);\n      }\n      initializers['' + observer.id] = initializer;\n    }\n    initIds.push(observer.id);\n  }\n}\n\n// Run observer node \"add\" callback.\n// Call when observer selector matches node.\n//\n// observer - An observer Object.\n// el       - An Element\n//\n// Returns nothing.\nfunction runAdd(observer, el) {\n  if (!(el instanceof observer.elementConstructor)) {\n    return;\n  }\n\n  var addIds = addMap.get(el);\n  if (!addIds) {\n    addIds = [];\n    addMap.set(el, addIds);\n  }\n\n  if (addIds.indexOf(observer.id) === -1) {\n    observer.elements.push(el);\n\n    var initializers = initializerMap.get(el);\n    var initializer = initializers ? initializers['' + observer.id] : null;\n    if (initializer && initializer.add) {\n      initializer.add.call(undefined, el);\n    }\n\n    if (observer.subscribe) {\n      var subscription = observer.subscribe.call(undefined, el);\n      if (subscription) {\n        var subscriptions = subscriptionMap.get(el);\n        if (!subscriptions) {\n          subscriptions = {};\n          subscriptionMap.set(el, subscriptions);\n        }\n        subscriptions['' + observer.id] = subscription;\n      }\n    }\n\n    if (observer.add) {\n      observer.add.call(undefined, el);\n    }\n\n    addIds.push(observer.id);\n  }\n}\n\n// Runs all observer element \"remove\" callbacks.\n// Call when element is completely removed from the DOM.\n//\n// observer - An observer Object.\n// el       - An Element\n//\n// Returns nothing.\nfunction runRemove(observer, el) {\n  if (!(el instanceof observer.elementConstructor)) {\n    return;\n  }\n\n  var addIds = addMap.get(el);\n  if (!addIds) {\n    return;\n  }\n\n  var index = observer.elements.indexOf(el);\n  if (index !== -1) {\n    observer.elements.splice(index, 1);\n  }\n\n  index = addIds.indexOf(observer.id);\n  if (index !== -1) {\n    var initializers = initializerMap.get(el);\n    var initializer = initializers ? initializers['' + observer.id] : null;\n    if (initializer) {\n      if (initializer.remove) {\n        initializer.remove.call(undefined, el);\n      }\n    }\n\n    if (observer.subscribe) {\n      var subscriptions = subscriptionMap.get(el);\n      var subscription = subscriptions ? subscriptions['' + observer.id] : null;\n      if (subscription && subscription.unsubscribe) {\n        subscription.unsubscribe();\n      }\n    }\n\n    if (observer.remove) {\n      observer.remove.call(undefined, el);\n    }\n\n    addIds.splice(index, 1);\n  }\n\n  if (addIds.length === 0) {\n    addMap.delete(el);\n  }\n}\n\n// Runs all observer element \"remove\" callbacks.\n// Call when element is completely removed from the DOM.\n//\n// observes - Array of observers\n// el - An Element\n//\n// Returns nothing.\nfunction runRemoveAll(observers, el) {\n  var addIds = addMap.get(el);\n  if (!addIds) {\n    return;\n  }\n\n  var ids = addIds.slice(0);\n  for (var i = 0; i < ids.length; i++) {\n    var observer = observers[ids[i]];\n    if (!observer) {\n      continue;\n    }\n\n    var index = observer.elements.indexOf(el);\n    if (index !== -1) {\n      observer.elements.splice(index, 1);\n    }\n\n    var initializers = initializerMap.get(el);\n    var initializer = initializers ? initializers['' + observer.id] : null;\n    if (initializer && initializer.remove) {\n      initializer.remove.call(undefined, el);\n    }\n\n    var subscriptions = subscriptionMap.get(el);\n    var subscription = subscriptions ? subscriptions['' + observer.id] : null;\n    if (subscription && subscription.unsubscribe) {\n      subscription.unsubscribe();\n    }\n\n    if (observer.remove) {\n      observer.remove.call(undefined, el);\n    }\n  }\n  addMap.delete(el);\n}\n\nvar innerHTMLReplacementIsBuggy = null;\n\n// In IE 9/10/11 replacing child via innerHTML will orphan all of the child\n// elements. This prevents walking the descendants of removedNodes.\n// https://connect.microsoft.com/IE/feedback/details/797844/ie9-10-11-dom-child-kill-bug\nfunction detectInnerHTMLReplacementBuggy(document) {\n  if (innerHTMLReplacementIsBuggy === null) {\n    var a = document.createElement('div');\n    var b = document.createElement('div');\n    var c = document.createElement('div');\n    a.appendChild(b);\n    b.appendChild(c);\n    a.innerHTML = '';\n    innerHTMLReplacementIsBuggy = c.parentNode !== b;\n  }\n  return innerHTMLReplacementIsBuggy;\n}\n\nfunction supportsSelectorMatching(node) {\n  return 'matches' in node || 'webkitMatchesSelector' in node || 'mozMatchesSelector' in node || 'oMatchesSelector' in node || 'msMatchesSelector' in node;\n}\n\n// selector-observer processes dom mutations in two phases. This module\n// processes DOM mutations, revalidates selectors against the target element and\n// enqueues a Change for an observers hooks to be ran.\n\n// A set of Changes is structured as an Array of tuples:\n//\n// [ADD, element, observer]: Indicates that an observer starting matching\n// the element.\nvar ADD = 1;\n\n// [REMOVE, element, observer]: Indicates that an observer stopped matching\n// the element.\nvar REMOVE = 2;\n\n// [REMOVE_ALL, element]: Indicates that an element was removed from the\n// document and all related observers stopped matching the element.\nvar REMOVE_ALL = 3;\n\n// A handler for processing MutationObserver mutations.\n//\n// selectorObserver - The SelectorObserver\n// changes - Array of changes to append to\n// mutations - An array of MutationEvents\n//\n// Return nothing.\nfunction handleMutations$1(selectorObserver, changes, mutations) {\n  for (var i = 0; i < mutations.length; i++) {\n    var mutation = mutations[i];\n    if (mutation.type === 'childList') {\n      addNodes(selectorObserver, changes, mutation.addedNodes);\n      removeNodes(selectorObserver, changes, mutation.removedNodes);\n    } else if (mutation.type === 'attributes') {\n      revalidateObservers(selectorObserver, changes, mutation.target);\n    }\n  }\n  if (detectInnerHTMLReplacementBuggy(selectorObserver.ownerDocument)) {\n    revalidateOrphanedElements(selectorObserver, changes);\n  }\n}\n\n// Run observer node \"add\" callback once on the any matching\n// node and its subtree.\n//\n// selectorObserver - The SelectorObserver\n// changes - Array of changes to append to\n// nodes   - A NodeList of Nodes\n//\n// Returns nothing.\nfunction addNodes(selectorObserver, changes, nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n\n    if (supportsSelectorMatching(node)) {\n      var matches = selectorObserver.selectorSet.matches(node);\n      for (var j = 0; j < matches.length; j++) {\n        var data = matches[j].data;\n\n        changes.push([ADD, node, data]);\n      }\n    }\n\n    if ('querySelectorAll' in node) {\n      var matches2 = selectorObserver.selectorSet.queryAll(node);\n      for (var _j = 0; _j < matches2.length; _j++) {\n        var _matches2$_j = matches2[_j],\n            _data = _matches2$_j.data,\n            elements = _matches2$_j.elements;\n\n        for (var k = 0; k < elements.length; k++) {\n          changes.push([ADD, elements[k], _data]);\n        }\n      }\n    }\n  }\n}\n\n// Run all observer node \"remove\" callbacks on the node\n// and its entire subtree.\n//\n// selectorObserver - The SelectorObserver\n// changes - Array of changes to append to\n// nodes   - A NodeList of Nodes\n//\n// Returns nothing.\nfunction removeNodes(selectorObserver, changes, nodes) {\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if ('querySelectorAll' in node) {\n      changes.push([REMOVE_ALL, node]);\n      var descendants = node.querySelectorAll('*');\n      for (var j = 0; j < descendants.length; j++) {\n        changes.push([REMOVE_ALL, descendants[j]]);\n      }\n    }\n  }\n}\n\n// Recheck all \"add\" observers to see if the selector still matches.\n// If not, run the \"remove\" callback.\n//\n// selectorObserver - The SelectorObserver\n// changes - Array of changes to append to\n// node    - A Node\n//\n// Returns nothing.\nfunction revalidateObservers(selectorObserver, changes, node) {\n  if (supportsSelectorMatching(node)) {\n    var matches = selectorObserver.selectorSet.matches(node);\n    for (var i = 0; i < matches.length; i++) {\n      var data = matches[i].data;\n\n      changes.push([ADD, node, data]);\n    }\n  }\n\n  if ('querySelectorAll' in node) {\n    var ids = addMap.get(node);\n    if (ids) {\n      for (var _i = 0; _i < ids.length; _i++) {\n        var observer = selectorObserver.observers[ids[_i]];\n        if (observer) {\n          if (!selectorObserver.selectorSet.matchesSelector(node, observer.selector)) {\n            changes.push([REMOVE, node, observer]);\n          }\n        }\n      }\n    }\n  }\n}\n\n// Recheck all \"add\" observers to see if the selector still matches.\n// If not, run the \"remove\" callback. Runs on node and all its descendants.\n//\n// selectorObserver - The SelectorObserver\n// changes - Array of changes to append to\n// node    - The root Node\n//\n// Returns nothing.\nfunction revalidateDescendantObservers(selectorObserver, changes, node) {\n  if ('querySelectorAll' in node) {\n    revalidateObservers(selectorObserver, changes, node);\n    var descendants = node.querySelectorAll('*');\n    for (var i = 0; i < descendants.length; i++) {\n      revalidateObservers(selectorObserver, changes, descendants[i]);\n    }\n  }\n}\n\n// Recheck input after \"change\" event and possible related form elements.\n//\n// selectorObserver - The SelectorObserver\n// changes - Array of changes to append to\n// input   - The HTMLInputElement\n//\n// Returns nothing.\nfunction revalidateInputObservers(selectorObserver, changes, inputs) {\n  for (var i = 0; i < inputs.length; i++) {\n    var input = inputs[i];\n    var els = input.form ? input.form.elements : selectorObserver.rootNode.querySelectorAll('input');\n    for (var j = 0; j < els.length; j++) {\n      revalidateObservers(selectorObserver, changes, els[j]);\n    }\n  }\n}\n\n// Check all observed elements to see if they are still in the DOM.\n// Only intended to run on IE where innerHTML replacement is buggy.\n//\n// selectorObserver - The SelectorObserver\n// changes - Array of changes to append to\n//\n// Returns nothing.\nfunction revalidateOrphanedElements(selectorObserver, changes) {\n  for (var i = 0; i < selectorObserver.observers.length; i++) {\n    var observer = selectorObserver.observers[i];\n    if (observer) {\n      var elements = observer.elements;\n\n      for (var j = 0; j < elements.length; j++) {\n        var el = elements[j];\n        if (!el.parentNode) {\n          changes.push([REMOVE_ALL, el]);\n        }\n      }\n    }\n  }\n}\n\nfunction whenReady(document, callback) {\n  var readyState = document.readyState;\n  if (readyState === 'interactive' || readyState === 'complete') {\n    scheduleMacroTask(document, callback);\n  } else {\n    document.addEventListener('DOMContentLoaded', scheduleMacroTask(document, callback));\n  }\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n// Observer uid counter\nvar uid = 0;\n\nfunction SelectorObserver(rootNode) {\n  this.rootNode = rootNode.nodeType === 9 ? rootNode.documentElement : rootNode;\n  this.ownerDocument = rootNode.nodeType === 9 ? rootNode : rootNode.ownerDocument;\n\n  // Map of observer id to object\n  this.observers = [];\n\n  // Index of selectors to observer objects\n  this.selectorSet = new SelectorSet();\n\n  // Process all mutations from root element\n  this.mutationObserver = new MutationObserver(handleRootMutations.bind(this, this));\n\n  this._scheduleAddRootNodes = scheduleBatch(this.ownerDocument, addRootNodes.bind(this, this));\n\n  this._handleThrottledChangedTargets = scheduleBatch(this.ownerDocument, handleChangedTargets.bind(this, this));\n  this.rootNode.addEventListener('change', handleChangeEvents.bind(this, this), false);\n\n  whenReady(this.ownerDocument, onReady.bind(this, this));\n}\n\nSelectorObserver.prototype.disconnect = function () {\n  this.mutationObserver.disconnect();\n};\n\n// Register a new observer.\n//\n// selector - String CSS selector.\n// handlers - Initialize Function or Object with keys:\n//   initialize - Function to invoke once when Node is first matched\n//   add        - Function to invoke when Node matches selector\n//   remove     - Function to invoke when Node no longer matches selector\n//   subscribe  - Function to invoke when Node matches selector and returns Subscription.\n//\n// Returns Observer object.\nSelectorObserver.prototype.observe = function (a, b) {\n  var handlers = void 0;\n\n  if (typeof b === 'function') {\n    handlers = {\n      selector: a,\n      initialize: b\n    };\n  } else if ((typeof b === 'undefined' ? 'undefined' : _typeof(b)) === 'object') {\n    handlers = b;\n    handlers.selector = a;\n  } else {\n    handlers = a;\n  }\n\n  var self = this;\n\n  var observer = {\n    id: uid++,\n    selector: handlers.selector,\n    initialize: handlers.initialize,\n    add: handlers.add,\n    remove: handlers.remove,\n    subscribe: handlers.subscribe,\n    elements: [],\n    elementConstructor: handlers.hasOwnProperty('constructor') ? handlers.constructor : this.ownerDocument.defaultView.Element,\n    abort: function abort() {\n      self._abortObserving(observer);\n    }\n  };\n  this.selectorSet.add(observer.selector, observer);\n  this.observers[observer.id] = observer;\n  this._scheduleAddRootNodes();\n\n  return observer;\n};\n\n// Removes observer and calls any remaining remove hooks.\n//\n// observer - Observer object\n//\n// Returns nothing.\nSelectorObserver.prototype._abortObserving = function (observer) {\n  var elements = observer.elements;\n  for (var i = 0; i < elements.length; i++) {\n    runRemove(observer, elements[i]);\n  }\n  this.selectorSet.remove(observer.selector, observer);\n  delete this.observers[observer.id];\n};\n\n// Internal: For hacking in dirty changes that aren't getting picked up\nSelectorObserver.prototype.triggerObservers = function (container) {\n  var changes = [];\n  revalidateDescendantObservers(this, changes, container);\n  applyChanges(this, changes);\n};\n\nfunction onReady(selectorObserver) {\n  selectorObserver.mutationObserver.observe(selectorObserver.rootNode, {\n    childList: true,\n    attributes: true,\n    subtree: true\n  });\n  selectorObserver._scheduleAddRootNodes();\n}\n\nfunction addRootNodes(selectorObserver) {\n  var changes = [];\n  addNodes(selectorObserver, changes, [selectorObserver.rootNode]);\n  applyChanges(selectorObserver, changes);\n}\n\nfunction handleRootMutations(selectorObserver, mutations) {\n  var changes = [];\n  handleMutations$1(selectorObserver, changes, mutations);\n  applyChanges(selectorObserver, changes);\n}\n\nfunction handleChangeEvents(selectorObserver, event) {\n  selectorObserver._handleThrottledChangedTargets(event.target);\n}\n\nfunction handleChangedTargets(selectorObserver, inputs) {\n  var changes = [];\n  revalidateInputObservers(selectorObserver, changes, inputs);\n  applyChanges(selectorObserver, changes);\n}\n\n// observe\n//\n// Observe provides a declarative hook thats informed when an element becomes\n// matched by a selector, and then when it stops matching the selector.\n//\n// Examples\n//\n//   observe('.js-foo', (el) => {\n//     console.log(el, 'was added to the DOM')\n//   })\n//\n//   observe('.js-bar', {\n//     add(el) { console.log('js-bar was added to', el) },\n//     remove(el) { console.log 'js-bar was removed from', el) }\n//   })\n//\n\nvar documentObserver = void 0;\n\nfunction getDocumentObserver() {\n  if (!documentObserver) {\n    documentObserver = new SelectorObserver(window.document);\n  }\n  return documentObserver;\n}\n\nfunction observe() {\n  var _getDocumentObserver;\n\n  return (_getDocumentObserver = getDocumentObserver()).observe.apply(_getDocumentObserver, arguments);\n}\n\nfunction triggerObservers() {\n  var _getDocumentObserver2;\n\n  return (_getDocumentObserver2 = getDocumentObserver()).triggerObservers.apply(_getDocumentObserver2, arguments);\n}\n\nexport default SelectorObserver;\nexport { getDocumentObserver, observe, triggerObservers };\n","// Public: Create a new SelectorSet.\nexport default function SelectorSet() {\n  // Construct new SelectorSet if called as a function.\n  if (!(this instanceof SelectorSet)) {\n    return new SelectorSet();\n  }\n\n  // Public: Number of selectors added to the set\n  this.size = 0;\n\n  // Internal: Incrementing ID counter\n  this.uid = 0;\n\n  // Internal: Array of String selectors in the set\n  this.selectors = [];\n\n  // Internal: All Object index String names mapping to Index objects.\n  this.indexes = Object.create(this.indexes);\n\n  // Internal: Used Object index String names mapping to Index objects.\n  this.activeIndexes = [];\n}\n\n// Detect prefixed Element#matches function.\nvar docElem = window.document.documentElement;\nvar matches = (docElem.matches ||\n                docElem.webkitMatchesSelector ||\n                docElem.mozMatchesSelector ||\n                docElem.oMatchesSelector ||\n                docElem.msMatchesSelector);\n\n// Public: Check if element matches selector.\n//\n// Maybe overridden with custom Element.matches function.\n//\n// el       - An Element\n// selector - String CSS selector\n//\n// Returns true or false.\nSelectorSet.prototype.matchesSelector = function(el, selector) {\n  return matches.call(el, selector);\n};\n\n// Public: Find all elements in the context that match the selector.\n//\n// Maybe overridden with custom querySelectorAll function.\n//\n// selectors - String CSS selectors.\n// context   - Element context\n//\n// Returns non-live list of Elements.\nSelectorSet.prototype.querySelectorAll = function(selectors, context) {\n  return context.querySelectorAll(selectors);\n};\n\n\n// Public: Array of indexes.\n//\n// name     - Unique String name\n// selector - Function that takes a String selector and returns a String key\n//            or undefined if it can't be used by the index.\n// element  - Function that takes an Element and returns an Array of String\n//            keys that point to indexed values.\n//\nSelectorSet.prototype.indexes = [];\n\n// Index by element id\nvar idRe = /^#((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'ID',\n  selector: function matchIdSelector(sel) {\n    var m;\n    if (m = sel.match(idRe)) {\n      return m[0].slice(1);\n    }\n  },\n  element: function getElementId(el) {\n    if (el.id) {\n      return [el.id];\n    }\n  }\n});\n\n// Index by all of its class names\nvar classRe = /^\\.((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'CLASS',\n  selector: function matchClassSelector(sel) {\n    var m;\n    if (m = sel.match(classRe)) {\n      return m[0].slice(1);\n    }\n  },\n  element: function getElementClassNames(el) {\n    var className = el.className;\n    if (className) {\n      if (typeof className === 'string') {\n        return className.split(/\\s/);\n      } else if (typeof className === 'object' && 'baseVal' in className) {\n        // className is a SVGAnimatedString\n        // global SVGAnimatedString is not an exposed global in Opera 12\n        return className.baseVal.split(/\\s/);\n      }\n    }\n  }\n});\n\n// Index by tag/node name: `DIV`, `FORM`, `A`\nvar tagRe = /^((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)/g;\nSelectorSet.prototype.indexes.push({\n  name: 'TAG',\n  selector: function matchTagSelector(sel) {\n    var m;\n    if (m = sel.match(tagRe)) {\n      return m[0].toUpperCase();\n    }\n  },\n  element: function getElementTagName(el) {\n    return [el.nodeName.toUpperCase()];\n  }\n});\n\n// Default index just contains a single array of elements.\nSelectorSet.prototype.indexes['default'] = {\n  name: 'UNIVERSAL',\n  selector: function() {\n    return true;\n  },\n  element: function() {\n    return [true];\n  }\n};\n\n\n// Use ES Maps when supported\nvar Map;\nif (typeof window.Map === 'function') {\n  Map = window.Map;\n} else {\n  Map = (function() {\n    function Map() {\n      this.map = {};\n    }\n    Map.prototype.get = function(key) {\n      return this.map[key + ' '];\n    };\n    Map.prototype.set = function(key, value) {\n      this.map[key + ' '] = value;\n    };\n    return Map;\n  })();\n}\n\n\n// Regexps adopted from Sizzle\n//   https://github.com/jquery/sizzle/blob/1.7/sizzle.js\n//\nvar chunker = /((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g;\n\n// Internal: Get indexes for selector.\n//\n// selector - String CSS selector\n//\n// Returns Array of {index, key}.\nfunction parseSelectorIndexes(allIndexes, selector) {\n  allIndexes = allIndexes.slice(0).concat(allIndexes['default']);\n\n  var allIndexesLen = allIndexes.length,\n      i, j, m, dup, rest = selector,\n      key, index, indexes = [];\n\n  do {\n    chunker.exec('');\n    if (m = chunker.exec(rest)) {\n      rest = m[3];\n      if (m[2] || !rest) {\n        for (i = 0; i < allIndexesLen; i++) {\n          index = allIndexes[i];\n          if (key = index.selector(m[1])) {\n            j = indexes.length;\n            dup = false;\n            while (j--) {\n              if (indexes[j].index === index && indexes[j].key === key) {\n                dup = true;\n                break;\n              }\n            }\n            if (!dup) {\n              indexes.push({index: index, key: key});\n            }\n            break;\n          }\n        }\n      }\n    }\n  } while (m);\n\n  return indexes;\n}\n\n// Internal: Find first item in Array that is a prototype of `proto`.\n//\n// ary   - Array of objects\n// proto - Prototype of expected item in `ary`\n//\n// Returns object from `ary` if found. Otherwise returns undefined.\nfunction findByPrototype(ary, proto) {\n  var i, len, item;\n  for (i = 0, len = ary.length; i < len; i++) {\n    item = ary[i];\n    if (proto.isPrototypeOf(item)) {\n      return item;\n    }\n  }\n}\n\n// Public: Log when added selector falls under the default index.\n//\n// This API should not be considered stable. May change between\n// minor versions.\n//\n// obj - {selector, data} Object\n//\n//   SelectorSet.prototype.logDefaultIndexUsed = function(obj) {\n//     console.warn(obj.selector, \"could not be indexed\");\n//   };\n//\n// Returns nothing.\nSelectorSet.prototype.logDefaultIndexUsed = function() {};\n\n// Public: Add selector to set.\n//\n// selector - String CSS selector\n// data     - Optional data Object (default: undefined)\n//\n// Returns nothing.\nSelectorSet.prototype.add = function(selector, data) {\n  var obj, i, indexProto, key, index, objs,\n      selectorIndexes, selectorIndex,\n      indexes = this.activeIndexes,\n      selectors = this.selectors;\n\n  if (typeof selector !== 'string') {\n    return;\n  }\n\n  obj = {\n    id: this.uid++,\n    selector: selector,\n    data: data\n  };\n\n  selectorIndexes = parseSelectorIndexes(this.indexes, selector);\n  for (i = 0; i < selectorIndexes.length; i++) {\n    selectorIndex = selectorIndexes[i];\n    key = selectorIndex.key;\n    indexProto = selectorIndex.index;\n\n    index = findByPrototype(indexes, indexProto);\n    if (!index) {\n      index = Object.create(indexProto);\n      index.map = new Map();\n      indexes.push(index);\n    }\n\n    if (indexProto === this.indexes['default']) {\n      this.logDefaultIndexUsed(obj);\n    }\n    objs = index.map.get(key);\n    if (!objs) {\n      objs = [];\n      index.map.set(key, objs);\n    }\n    objs.push(obj);\n  }\n\n  this.size++;\n  selectors.push(selector);\n};\n\n// Public: Remove selector from set.\n//\n// selector - String CSS selector\n// data     - Optional data Object (default: undefined)\n//\n// Returns nothing.\nSelectorSet.prototype.remove = function(selector, data) {\n  if (typeof selector !== 'string') {\n    return;\n  }\n\n  var selectorIndexes, selectorIndex, i, j, k, selIndex, objs, obj;\n  var indexes = this.activeIndexes;\n  var removedIds = {};\n  var removeAll = arguments.length === 1;\n\n  selectorIndexes = parseSelectorIndexes(this.indexes, selector);\n  for (i = 0; i < selectorIndexes.length; i++) {\n    selectorIndex = selectorIndexes[i];\n\n    j = indexes.length;\n    while (j--) {\n      selIndex = indexes[j];\n      if (selectorIndex.index.isPrototypeOf(selIndex)) {\n        objs = selIndex.map.get(selectorIndex.key);\n        if (objs) {\n          k = objs.length;\n          while (k--) {\n            obj = objs[k];\n            if (obj.selector === selector && (removeAll || obj.data === data)) {\n              objs.splice(k, 1);\n              removedIds[obj.id] = true;\n            }\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  this.size -= Object.keys(removedIds).length;\n};\n\n// Sort by id property handler.\n//\n// a - Selector obj.\n// b - Selector obj.\n//\n// Returns Number.\nfunction sortById(a, b) {\n  return a.id - b.id;\n}\n\n// Public: Find all matching decendants of the context element.\n//\n// context - An Element\n//\n// Returns Array of {selector, data, elements} matches.\nSelectorSet.prototype.queryAll = function(context) {\n  if (!this.selectors.length) {\n    return [];\n  }\n\n  var matches = {}, results = [];\n  var els = this.querySelectorAll(this.selectors.join(', '), context);\n\n  var i, j, len, len2, el, m, match, obj;\n  for (i = 0, len = els.length; i < len; i++) {\n    el = els[i];\n    m = this.matches(el);\n    for (j = 0, len2 = m.length; j < len2; j++) {\n      obj = m[j];\n      if (!matches[obj.id]) {\n        match = {\n          id: obj.id,\n          selector: obj.selector,\n          data: obj.data,\n          elements: []\n        };\n        matches[obj.id] = match;\n        results.push(match);\n      } else {\n        match = matches[obj.id];\n      }\n      match.elements.push(el);\n    }\n  }\n\n  return results.sort(sortById);\n};\n\n// Public: Match element against all selectors in set.\n//\n// el - An Element\n//\n// Returns Array of {selector, data} matches.\nSelectorSet.prototype.matches = function(el) {\n  if (!el) {\n    return [];\n  }\n\n  var i, j, k, len, len2, len3, index, keys, objs, obj, id;\n  var indexes = this.activeIndexes, matchedIds = {}, matches = [];\n\n  for (i = 0, len = indexes.length; i < len; i++) {\n    index = indexes[i];\n    keys = index.element(el);\n    if (keys) {\n      for (j = 0, len2 = keys.length; j < len2; j++) {\n        if (objs = index.map.get(keys[j])) {\n          for (k = 0, len3 = objs.length; k < len3; k++) {\n            obj = objs[k];\n            id = obj.id;\n            if (!matchedIds[id] && this.matchesSelector(el, obj.selector)) {\n              matchedIds[id] = true;\n              matches.push(obj);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return matches.sort(sortById);\n};\n"],"sourceRoot":""}